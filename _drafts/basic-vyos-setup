---
layout: post
title:  "Basic VyOS Configuration"
slug:   basic-setup
date:   2019-03-31 23:58:29
categories: vyos
tags:
 - networking
 - vyos
 - router
 - firewall
 - vyos-1.1.8
---

VyOS is a linux-based CLI-only router distribution. It is designed to act as a router 
appliance, offering complex enterprise-grade routing and switching features to any user 
for free.

It is based on a modifed Debian base, so can run anywhere Debian would run. It is 
suitable for both physical installations - prefered for production border firewalls - 
as well as virtual installs - good for testing and VM-only networking.

This guide will document the steps required to take a clean VyOS install and set up the 
basic functions required to use it as a router at the edge of a test or residential 
network, including NAT, port forwarding, DHCP client function for the external IP, DHCP 
server functions for internal networking. With these functions, you can replace any 
standard consumer edge router with a far more powerful and secure device.


TODO: use this for some steps: https://wiki.vyos.net/wiki/User_Guide


## Install

For the initial install, boot from the bootable media, and login with username and 
password of "vyos."

From there, run command `install image` and follow the prompts.

```bash
vyos@vyos:~$ install image
```

When complete, reboot. 


## Configure Mode

As with other unix systems and networking equipment, there are multiple security contexts 
with greater or lesser privilege. 

To enter "edit" mode on vyos, which allows configuration to be edited, not just read, 
type: `configure`.

```
vyos@vyos:~$ configure 
[edit]
vyos@vyos#
```

When in `configure` mode, the `[edit]` tag will be displayed on each shell prompt,
as well as the `$` turning into a `#`, which is used to seperate a root shell from
a nonroot shell.

When you are complete with changes, type `commit`. This will take the configuration 
changes you have made and make them live.


## User Accounts

During installation, you set a password for the `vyos` user. You can 
add additional users using the following two commands. The user 
is being created with the following details:

 * username: jsmith
 * Full name: John Smith
 * Password: mypassword


```bash
[edit]
vyos@vyos# set system login user jsmith full-name "John Smith"
vyos@vyos# set system login user jsmith authentication plaintext-password mypassword
commit
```

Additionally, you can delete users (such as the default `vyos` user, which is 
recommended) by running the following command. Note that you can not delete 
the currently logged in user.

```bash
[edit]
vyos@vyos# delete system login user [username]
vyos@vyos# commit
```

## SSH Keys

Passwords are insecure for SSH login - the best practice is to use SSH public/
private key pairs.

To specify a key for a user, use command `loadkey [user] [keypath]`.

Possible protocols for keypath include:

 - Direct path on filesystem
 - scp://<user>@<host>/<file>
 - http://<host>/<file>
 - scp://<user>@<host>/<file>
 - tftp://<host>/<file>

For example, load a key from a public URL using the command below.

```
[edit]
vyos@vyos# loadkey jsmith https://example.com/users/jsmith/ssh/publickey
```

## Interface Setup

Most router configurations feature a singlular outside/wan
interface, and one or more inside interfaces for various
features.

Begin by enumeration the interfaces on the system.

```bash
[edit]
vyos@vyos# show interfaces
```

Then, we will set up the interfaces we found. We'll set up one outside
interface with DHCP, and one inner interface with an IP, a
configuration suitable for a standard residential or small 
business network.

```bash
[edit]
vyos@vyos# set interfaces ethernet eth0 address dhcp
vyos@vyos# set interfaces ethernet eth0 description 'OUTSIDE'
```

```bash
[edit]
vyos@vyos# set interfaces ethernet eth1 address '192.168.0.1/24'
[edit]
vyos@vyos# set interfaces ethernet eth1 description 'INSIDE'
```


## Internal NAT  (src nat)

## Port Forwarding (dst nat)

## DHCP Client for Public IP

## DHCP Server for Internal Clients

## Multiple Subnets

## Switch Networks

You're now configured! Switch your network interfaces and test to ensure it works as expected!




## Bonus Sections / advanced

The things found below are not strictly required for a basic router, but many power 
users may find them useful for their work.

## Scripting

## Email Alerting with Scripts

## Scheduling Scripts

## Ansible Configuration Management

## Logging

## Auditing Connections

## Quality of Service (QOS)

## Enable Serial Backup

## SNMP

## Single Signon - LDAP
